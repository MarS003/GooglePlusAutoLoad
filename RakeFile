
require 'rake/clean'
require 'rest_client'

verbose(true)

CLEAN.include('dist/**/content.*')
CLEAN.include('dist/**/*.png')
CLEAN.include('dist/*.js')
CLEAN.include('dist/*.zip')
CLEAN.include('dist/*.crx')
CLEAN.include('dist/*.nex')
CLEAN.include('dist/*.pem')
CLEAN.include('dist/*.xpi')
CLEAN.include('dist/*.safariextz')


##################################################################################
#
# default task
#
task :default => [:chrome, :opera, :firefox, :safari]


##################################################################################
#
# rule: minimize JavaScript file
#
#  compilation_level:
#   WHITESPACE_ONLY
#   SIMPLE_OPTIMIZATIONS
#   ADVANCED_OPTIMIZATIONS
#
rule 'dist/compiled.js' => proc { |path|
  p path
  if    path =~ /chrome/  then 'dist/content.chrome.js'
  elsif path =~ /opera/   then 'dist/content.opera.js'
 #elsif path =~ /firefox/ then 'dist/content.firefox.js'
  elsif path =~ /safari/  then 'dist/content.safari.js'
  end
} do |t|
  responce = RestClient.post 'http://closure-compiler.appspot.com/compile', {
    :js_code => File.read(t.source),
    :compilation_level => 'SIMPLE_OPTIMIZATIONS',
    :output_format => 'text',
    :output_info => 'compiled_code'
  }
  open(t.name, "w") {|f| f.write responce}
end


##################################################################################
#
# rule: copy icon file
#
rule (/.*\.png/) do |t|
  basename = File::basename(t.name)
  sh "cp contrib/icon/#{basename} #{t.name}"
end


##################################################################################
#
# rule: copy css file
#
rule (/.*\.css/) do |t|
  basename = File::basename(t.name)
  sh "cp style/#{basename} #{t.name}"
end


##################################################################################
#
# task: to make chrome extension
#
task :chrome => ['dist/chrome.zip']

file 'dist/chrome.zip' => ['dist/chrome/content.js',
                           'dist/chrome/content.css',
                           'dist/chrome/manifest.json',
                           'dist/chrome/icon-16.png',
                           'dist/chrome/icon-48.png',
                           'dist/chrome/icon-128.png'] do |t|
  archive = t.prerequisites.join(' ');
  sh "zip -q #{t.name} #{archive}"
end

file 'dist/content.chrome.js' => ['src/loader.chrome.js', 'src/content.js'] do |t|
  sh "echo '\"use strict\";' > #{t.name}"
  sh "cat #{t.prerequisites.join(' ')} >> #{t.name}"
end

file 'dist/chrome/content.js' => 'dist/compiled.js' do |t|
  sh "cp #{t.prerequisites[0]} #{t.name}"
end


##################################################################################
#
# task: to make opera add-on
#
task :opera => ['dist/opera/content.js',
                'dist/opera/content.css',
                'dist/opera/manifest.json',
                'dist/opera/icon-16.png',
                'dist/opera/icon-48.png',
                'dist/opera/icon-128.png']

file 'dist/content.opera.js' => ['src/loader.chrome.js', 'src/content.js'] do |t|
  sh "echo '\"use strict\";' > #{t.name}"
  sh "echo 'window.gpal = window.gpal || {};' >> #{t.name}"
  sh "cat #{t.prerequisites.join(' ')} >> #{t.name}"
end


##################################################################################
#
# task: to make firefox add-on
#
task :firefox => ['dist/auto-load-new-posts-for-google-plus.xpi']

file 'dist/auto-load-new-posts-for-google-plus.xpi' => ['dist/firefox/data/content.js',
                                                        'dist/firefox/data/content.css',
                                                        'dist/firefox/lib/main.js',
                                                        'dist/firefox/package.json'] do |t|
  CFX_PATH = "~/Library/Developer/Local/Firefox/addon-sdk/bin/cfx"
  sh "(cd dist; #{CFX_PATH} --pkgdir=firefox xpi;)"
end

file 'dist/firefox/data/content.js' => ['src/loader.firefox.js', 'src/content.js'] do |t|
  sh "echo '\"use strict\";' > #{t.name}"
  sh "echo 'window.gpal = window.gpal || {};' >> #{t.name}"
  sh "cat #{t.prerequisites.join(' ')} >> #{t.name}"
end


##################################################################################
#
# task: to make safari extension
#
task :safari => ['dist/safari/autol-load-new-posts-for-google-plus.safariextension/content.js',
                 'dist/safari/autol-load-new-posts-for-google-plus.safariextension/content.css',
                 'dist/safari/autol-load-new-posts-for-google-plus.safariextension/icon-128.png']

file 'dist/content.safari.js' => ['src/loader.safari.js', 'src/content.js'] do |t|
  sh "echo '\"use strict\";' > #{t.name}"
  sh "echo 'window.gpal = window.gpal || {};' >> #{t.name}"
  sh "cat #{t.prerequisites.join(' ')} >> #{t.name}"
end
